@model SIMS.ViewModels.ItemModel.ItemModel

@{
    ViewBag.Title = "AddCategoryInfoModel";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}
<style>
    @@media (max-width:670px) {
        .admin-outer-form {
            padding: 0;
        }

        .admin-form {
            padding: 20px;
        }
    }

    .multiselect {
        width: auto;
    }

    .selectBox {
        position: relative;
    }





    input[type=checkbox] {
        margin: 2px;
        margin-left: 5px;
    }

        input[type=checkbox]:active .show {
            display: block;
        }

    .lable {
        font-weight: 100;
        font-size: 14px !important;
        margin-left: 3px;
    }
</style>
<link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    <div class="card-body admin-outer-form">
        <div class="card-body admin-form">
            <h3> Edit Item</h3>
            <hr />
            <div class="row">
                <div class="col-12"> &nbsp;</div>
            </div>


            <div class="row">
                <div class="col-md-1"> </div>
                <div class="col-12 col-md-10">
                    <div class="row">
                        <div class="col-4 d-md-none"></div>
                        <div class="col-4 col-md-3 text-center">
                            @if (Model.Photo != null && Model.Photo != "")
                            {

                                <img src="@Url.Content(Model.Photo)" class="img-fluid" />
                            }
                            else
                            {
                                <img src="" alt="No image" />
                            }
                            <input type="file" name="ImageFile" id="ImageFile" />
                            @Html.EditorFor(model => model.OldFile, "", new { htmlAttributes = new { @class = "", type = "hidden" } })


                        </div>
                        <div class="col-4 d-md-none"></div>

                        <div class="col-12 col-md-9">

                            <div class="card-body">
                                <div class="row d-none">
                                    <div class="col-12">
                                        @Html.EditorFor(model => model.Id, "", new { htmlAttributes = new { @class = "id" } })
                                    </div>
                                </div>
                                <div class="row" style="padding-bottom:10px;">

                                    <div class="col-sm-6">
                                        <label> Categories</label>
                                        @Html.DropDownListFor(model => model.CatagoryId, new SelectList(Model.CategoryList, "ID", "Name"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CatagoryId)
                                    </div>
                                    <div class="col-sm-6">
                                        @Html.LabelFor(model => model.SubCatagoryId)
                                        @Html.DropDownListFor(model => model.SubCatagoryId, new SelectList(Model.SubCategoryList, "ID", "Name"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SubCatagoryId)
                                    </div>
                                </div>


                                <div class="row" style="padding-bottom:10px;">

                                    <div class="col-sm-6">
                                        <label> Unit</label>
                                        @Html.DropDownListFor(model => model.UnitOfMeasurementId, new SelectList(Model.UnitOfMeasurementList, "ID", "UnitOfMeasurementName"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.UnitOfMeasurementId)
                                    </div>

                                    <div class="col-sm-6">
                                        @Html.LabelFor(model => model.SizeId)

                                        <div class="multiselect">
                                            <select onclick="myFunction()" class="dropbtns form-control"><option hidden>Sizes</option></select>
                                            <div id="Size" class="checkboxes" style="max-height:150px">

                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row" style="padding-bottom:10px;">

                                    <div class="col-sm-6">
                                        @Html.LabelFor(model => model.Name)
                                        @Html.EditorFor(model => model.Name, "", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name)
                                    </div>


                                </div>

                                <div class="row">
                                    <div class="col-12"> &nbsp;</div>
                                </div>

                                <div class="row">
                                    <div class=" col-sm-2"> </div>
                                    <div class="col-6 col-sm-4">
                                        <div class="input-group">
                                            <input type="submit" value="Update" class="btn btn-sm btn-dark btn-block" style="margin-bottom:20px" />
                                        </div>
                                    </div>
                                    <div class="col-6 col-sm-4">
                                        <div class="input-group">
                                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-sm btn-dark btn-block" })
                                        </div>
                                    </div>

                                </div>


                                <div class="col-md-1"> </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}
@section Scripts {


    <script>

        $(document).ready(function () {


            $(function LoadSize() {

                $.ajax({
                    type: "GET",

                    url: "/Item/GetItemSize",
                    data: { 'UnitOfMeasurementId': $('#UnitOfMeasurementId').val() },
                    success: function (data) {
                        //render products to appropriate dropdown
                        renderSize('.checkboxes', data);
                        loadsizes();
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })
            });

            var Sizes = []

            //fetch categories from database
            function loadsizes() {
                if (Sizes.length == 0) {
                    //ajax function for fetch data
                    $.ajax({
                        type: "GET",
                        url: '/Item/getProductSizeList',
                        data: { 'ItemId': $('.id').val() },
                        success: function (data) {

                            $.each(data, function (i, Val) {

                                Sizes.push(Val.SizeId);
                                $('input[type=checkbox]').each(function () {
                                    if ($(this).val() == Val.SizeId) {
                                        this.checked = true;
                                    }
                                })
                            })
                        }

                    });
                    //render catagory

                }
            }
        })





    </script>
    @Scripts.Render("~/bundles/jqueryval")

}


