@using PagedList;
@using PagedList.Mvc
@model IPagedList<SIMS.ViewModels.UsersModel.UsersModel>

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_AdminLayoutpage.cshtml";
}

@section Scripts{


}
<style>
    @@media (max-width:670px) {
        .admin-outer-form {
            padding: 0;
        }

        .admin-form {
            padding: 20px;
        }
    }
</style>
@using SIMS.BL

@using (@Html.BeginForm("AdminIndex", "Users", FormMethod.Get))
{
    int userId = Users.RetrieveStaffIdByEmail(ViewContext.HttpContext.User.Identity.Name);
    Users user = Users.RetrieveById(userId);
    AccessMatrix accessMatrix = AccessMatrix.RetrieveByModuleName("Users");
    if (accessMatrix != null)
    {
AccessMatrixDetails accessMatrixDetails = AccessMatrixDetails.RetrieveAccess(accessMatrix.Id, user.Usertype);

        if (accessMatrixDetails != null)
        {
            <div class="card-body admin-outer-form">
                <div class="card-body admin-form">
                    <h3>Users List</h3>
                    <hr />
                    <div class="row">
                        <div class="col-12">&nbsp;</div>
                    </div>


                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                @if (accessMatrixDetails.ModuleName == "Users")
                                {

                                    <div class="card-body">

                                        <div class="row">
                                            @if (accessMatrixDetails.IsSearch == true)
                                            {
                                                <div class="col-8 col-md-8 col-lg-4">
                                                    @Html.TextBox("search", null, new { @class = "search form-control", @placeholder = "Search", name = "search" })
                                                </div>

                                                <div class="col-4 col-md-4 col-lg-2">
                                                    <input type="submit" value="search" class="btn btn-block btn-outline-dark" />
                                                </div>

                                                <div class="col-6 col-md-5 col-lg-3 btnReadAll">
                                                    <button id="btnReadAll" class=" btn btn-block btn-dark">Show All</button>
                                                </div>
                                            }
                                            @if (accessMatrixDetails.IsCreate == true)
                                            {
                                                <div class="col-6 col-md-7 col-lg-3 btnReadAll">
                                                    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-info btn-dark btn-block" })
                                                </div>
                                            }

                                        </div>

                                        <div class="row">
                                            <div class="col-lg-10 col-6"></div>
                                            <div class="col-lg-2 col-6">
                                                @if (accessMatrixDetails.IsExport == true)
                                                {
                                                    @Html.ActionLink("Export", "Excel", "Users", new
                                               {
                                                   search = Request.QueryString["search"],
                                                   startdate = Request.QueryString["startdate"],
                                                   enddate = Request.QueryString["enddate"]
                                               }, new { @class = "btn btn-dark btn-block ", style = "margin-top:15px;margin-bottom:5px;" })
                                                }
                                            </div>
                                        </div>
                                        <!-- table-striped -->
                                        <table id="table" class="table table-responsive-lg  table-sm w3-table w3-striped w3-border">
                                            <thead>
                                                <tr>
                                                    <th colspan="1">
                                                        Employee ID
                                                    </th>
                                                    <th colspan="1">
                                                        @Html.DisplayNameFor(model => model.First().Name)
                                                    </th>

                                                    <th colspan="1">
                                                        @Html.DisplayNameFor(model => model.First().Mobile)
                                                    </th>

                                                    <th colspan="1">
                                                        @Html.DisplayNameFor(model => model.First().Email)
                                                    </th>
                                                    <th colspan="1">
                                                        @Html.DisplayNameFor(model => model.First().Department)
                                                    </th>

                                                    <th>
                                                        @Html.DisplayNameFor(model => model.First().Usertype)
                                                    </th>
                                                    <th>
                                                        @Html.DisplayNameFor(model => model.First().Target)
                                                    </th>
                                                    <th>
                                                        @Html.DisplayNameFor(model => model.First().SalesTarget)
                                                    </th>
                                                    <th data-field="Edit" data-tableexport-display="none"></th>
                                                    <th data-field="Details" data-tableexport-display="none"></th>
                                                    <th data-field="DeActivate" data-tableexport-display="none"></th>
                                                </tr>
                                            </thead>
                                            @if (Model.Count() == 0)
                                            {
                                                <tr>
                                                    <td colspan="7">No rows matching search criteria</td>
                                                </tr>
                                            }
                                            else
                                            {



                                                foreach (var item in Model)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Id)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Name)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Mobile)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Email)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Department)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Usertype)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Target)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.SalesTarget)
                                                        </td>


                                                        @if (item.Usertype == "Admin")
                                                        {
                                                            <td data-field="Edit" data-tableexport-display="none">
                                                                @Html.ActionLink("Edit", "Edit", "Users", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })

                                                            </td>

                                                            <td data-field="Details" data-tableexport-display="none">
                                                                @Html.ActionLink("Details", "Details", "Users", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                                            </td>

                                                            <td data-field="DeActivate" data-tableexport-display="none">
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td data-field="Edit" data-tableexport-display="none">
                                                                @Html.ActionLink("Edit", "Edit", "Users", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })

                                                            </td>

                                                            <td data-field="Details" data-tableexport-display="none">
                                                                @Html.ActionLink("Details", "Details", "Users", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                                            </td>

                                                            <td data-field="DeActivate" data-tableexport-display="none">

                                                                @Html.ActionLink("DeActivate", "Delete", "Users", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                                            </td>

                                                        }
                                                    </tr>
                                                }
                                            }

                                        </table>

                                    </div>
                                }
                                else
                                {
                                    TempData["ErrorMsg"] = "Access Permission not defined/Module name error";
                                }
                                <div class="card-footer text-muted">
                                    @Html.PagedListPager(Model, pageIndex => Url.Action("AdminIndex", new
                               {
                                   pageIndex,
                                   search = Request.QueryString["search"],
                                   startdate = Request.QueryString["startdate"],
                                   enddate = Request.QueryString["enddate"]
                               }),
      new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                                    @*@Html.Partial("_PagingFooter")*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
    }
}