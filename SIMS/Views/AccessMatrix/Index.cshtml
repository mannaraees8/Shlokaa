@using PagedList;
@using PagedList.Mvc
@model IPagedList<SIMS.ViewModels.AccessMatrixModel.AccessMatrixModel>

@{
    ViewBag.Title = "AccessMatrix";
    Layout = "~/Views/Shared/_AdminLayoutpage.cshtml";
}

<style>
    @@media (max-width:670px) {
        .admin-outer-form {
            padding: 0;
        }

        .admin-form {
            padding: 20px;
        }
    }
</style>
@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
}

<div class="row">
    <div class="col-12">&nbsp;</div>
</div>

<div class="card-body admin-outer-form">
    <div class="card-body admin-form">
        <h3> AccessMatrix List</h3>
        <hr />
        <div class="row">
            <div class="col-12">&nbsp;</div>
        </div>

        <div class="row">
            <div class="col-12 col-sm-12">
                <div class="card">

                    <div class="card-body">

                        @if (ViewContext.HttpContext.User.IsInRole("Group Head") || ViewContext.HttpContext.User.IsInRole("Admin"))
                        {
                            <div class="row">
                                <div class="col-sm-9"></div>
                                <div class="col-sm-3">
                                    @Html.ActionLink("Create New Module", "Create", null, new { @class = "btn btn-dark btn-block" })
                                </div>
                            </div>
                        }

                        <div class="row">
                            <div class="col-xs-12">&nbsp;</div>
                        </div>
                        <!-- table-striped -->
                        <table class="table table-responsive-lg  w3-table w3-striped w3-border" id="table">
                            <thead>
                                <tr>
                                    <th class="d-none">
                                        @Html.DisplayNameFor(model => model.First().Id)
                                    </th>
                                   
                                    <th>
                                        @Html.DisplayNameFor(model => model.First().ModuleName)
                                    </th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="d-none">
                                        @Html.DisplayFor(modelItem => item.Id)
                                    </td>
                                  
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ModuleName)
                                    </td>
                                    @if (ViewContext.HttpContext.User.IsInRole("Group Head") || ViewContext.HttpContext.User.IsInRole("Admin"))
                                    {
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", "AccessMatrix", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })

                                        </td>

                                        <td>

                                            @Html.ActionLink("Delete", "Delete", "AccessMatrix", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                        </td>
                                    }
                                </tr>
                            }

                        </table>


                    </div>
                    <div class="card-footer text-muted">
                        @Html.PagedListPager(Model, pageIndex => Url.Action("Index", new
                  {
                      pageIndex,
                 search = Request.QueryString["search"]

             }),
                new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                        @*@Html.Partial("_PagingFooter")*@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

