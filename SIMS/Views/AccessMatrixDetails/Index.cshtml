@using PagedList;
@using PagedList.Mvc
@model IPagedList<SIMS.ViewModels.AccessMatrixDetailsModel.AccessMatrixDetailsModel>

@{
    ViewBag.Title = "AccessMatrixDetails";
    Layout = "~/Views/Shared/_AdminLayoutpage.cshtml";
}

<style>
    @@media (max-width:670px) {
        .admin-outer-form {
            padding: 0;
        }

        .admin-form {
            padding: 20px;
        }
    }
</style>
@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
}

<div class="row">
    <div class="col-12">&nbsp;</div>
</div>
@using (@Html.BeginForm("Index", "AccessMatrixDetails", FormMethod.Get))
{

    <div class="card-body admin-outer-form">
        <div class="card-body admin-form">
            <h3> AccessMatrixDetails List</h3>
            <hr />
            <div class="row">
                <div class="col-12">&nbsp;</div>
            </div>

            <div class="row">
                <div class="col-12 col-sm-12">
                    <div class="card">

                        <div class="card-body">
                            <div class="row">
                                @if (ViewContext.HttpContext.User.IsInRole("Group Head") || ViewContext.HttpContext.User.IsInRole("Admin"))
                                {
                                    <div class="col-8 col-md-8 col-lg-4">
                                        @Html.TextBox("search", null, new { @class = "search form-control", @placeholder = "Search", name = "search", type="search" })
                                    </div>

                                    <div class="col-4 col-md-4 col-lg-2">
                                        <input type="submit" value="search" class="btn btn-block btn-outline-dark" />
                                    </div>

                                    <div class="col-6 col-md-5 col-lg-3 btnReadAll">
                                        <button id="btnReadAll" class=" btn btn-block btn-dark">Show All</button>
                                    </div>
                                }
                                @*<div class="col-6 col-md-7 col-lg-3 btnReadAll">
                                        @if (ViewContext.HttpContext.User.IsInRole("Group Head") || ViewContext.HttpContext.User.IsInRole("Admin"))
                                        {

                                            @Html.ActionLink("Create New AccessMatrix", "Create", null, new { @class = "btn btn-dark btn-block" })

                                        }

                                    </div>*@

                            </div>

                            <div class="row">
                                <div class="col-xs-12">&nbsp;</div>
                            </div>
                            <!-- table-striped -->
                            <table class="table table-responsive-lg  w3-table w3-striped w3-border" id="table">
                                <thead>
                                    <tr>
                                        <th class="d-none">
                                            @Html.DisplayNameFor(model => model.First().Id)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().ModuleName)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().UserType)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsCreate)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsEdit)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsDetails)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsTally)
                                        </th>
                                        @*<th>
                                                @Html.DisplayNameFor(model => model.First().IsUpdate)
                                            </th>*@
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsIndex)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsSearch)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsExport)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.First().IsDeleted)
                                        </th>
                                        <th></th>
                                        @*<th></th>*@
                                        @*<th></th>*@
                                    </tr>
                                </thead>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td class="d-none">
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ModuleName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserType)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsCreate)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsEdit)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsDetails)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsTally)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.IsUpdate)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsIndex)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsSearch)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsExport)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.IsDeleted)
                                        </td>

                                        @if (ViewContext.HttpContext.User.IsInRole("Group Head") || ViewContext.HttpContext.User.IsInRole("Admin"))
                                        {
                                            <td>
                                                @Html.ActionLink("Edit", "Edit", "AccessMatrixDetails", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })

                                            </td>

                                            @*<td>
                                                    @Html.ActionLink("Details", "Details", "AccessMatrixDetails", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                                </td>*@

                                            @*<td>

                                                    @Html.ActionLink("Delete", "Delete", "AccessMatrixDetails", new { id = item.Id }, new { @class = "btn btn-sm btn-dark btn-block" })
                                                </td>*@
                                        }
                                    </tr>
                                }

                            </table>


                        </div>
                        <div class="card-footer text-muted">
                            @Html.PagedListPager(Model, pageIndex => Url.Action("Index", new
                       {
                           pageIndex,
                           search = Request.QueryString["search"]

                       }),
 new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                            @*@Html.Partial("_PagingFooter")*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}